name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint:backend
      
      - name: Run Solhint
        run: npm run lint:contracts
      
      - name: Check Prettier formatting
        run: npm run format -- --check

  test-contracts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Compile contracts
        run: npm run build:contracts
      
      - name: Run contract tests
        run: npm run test:contracts
      
      - name: Generate coverage report
        run: npm run test:contracts:coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: contracts

  test-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: nil_password
          POSTGRES_USER: nil_user
          POSTGRES_DB: nil_transparency_test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run backend tests
        run: npm run test:backend
        env:
          TEST_DATABASE_URL: postgresql://nil_user:nil_password@localhost:5432/nil_transparency_test_db
          REDIS_URL: redis://localhost:6379
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: backend

  security-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run npm audit
        run: npm audit --audit-level moderate
      
      - name: Run Slither analysis
        uses: crytic/slither-action@v0.3.0
        with:
          target: 'contracts/'
          slither-args: '--print human-summary'
        continue-on-error: true

  build-and-deploy:
    needs: [lint-and-format, test-contracts, test-backend, security-audit]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Build Docker images
        run: |
          docker build -t nil-transparency-api -f docker/Dockerfile.api .
          docker build -t nil-transparency-dashboard -f docker/Dockerfile.dashboard .
      
      - name: Deploy to staging (if main branch)
        if: github.ref == 'refs/heads/main'
        run: echo "Deploy to staging environment"
        # Add actual deployment commands here